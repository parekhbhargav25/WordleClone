{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavparekh/Documents/wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useEffect } from \"react\";\nimport Board from \"./components/Board\";\nimport Keyboard from \"./components/Keyboard\";\nimport GameOver from \"./components/GameOver\";\nimport { boardDefault, scoreBoardDefault } from \"./Words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(boardDefault);\n  const [scoreBoard, setScoreBoard] = useState(scoreBoardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letter: 0\n  });\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false\n  });\n  const TalkToAPI = async guess => {\n    try {\n      const response = await fetch('https://wordle-apis.vercel.app/api/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          guess: guess\n        })\n      });\n      const data = await response.json();\n      return data.is_valid_word;\n    } catch (error) {\n      console.error('Error:', error);\n      return false;\n    }\n  };\n  const onEnter = async () => {\n    if (currAttempt.letter !== 5) {\n      return;\n    }\n    let currWord = \"\";\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n    const validWord = await TalkToAPI(currWord);\n    if (validWord) {\n      setCurrAttempt({\n        attempt: currAttempt.attempt + 1,\n        letter: 0\n      });\n    } else {\n      alert(\"Not a valid word\");\n    }\n  };\n  useEffect(() => {\n    const totalScore = scoreBoard.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    if (totalScore === 10) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: true\n      });\n    } else if (currAttempt.attempt === 5) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: false\n      });\n    }\n  }, [scoreBoard, currAttempt]);\n  const onDelete = () => {\n    if (currAttempt.letter === 0) return;\n    const newBoard = [...board];\n    const newScoreBoard = [...scoreBoard];\n    newBoard[currAttempt.attempt][currAttempt.letter - 1] = \"\";\n    newScoreBoard[currAttempt.attempt][currAttempt.letter - 1] = 0;\n    setBoard(newBoard);\n    setScoreBoard(newScoreBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letter: currAttempt.letter - 1\n    });\n  };\n  const onSelectLetter = key => {\n    if (currAttempt.letter > 4) return;\n    const newBoard = [...board];\n    const newScoreBoard = [...scoreBoard];\n    newBoard[currAttempt.attempt][currAttempt.letter] = key;\n    newScoreBoard[currAttempt.attempt][currAttempt.letter] = 0;\n    setBoard(newBoard);\n    setScoreBoard(newScoreBoard);\n    setCurrAttempt({\n      attempt: currAttempt.attempt,\n      letter: currAttempt.letter + 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        scoreBoard,\n        currAttempt,\n        setCurrAttempt,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        gameOver\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), gameOver.gameOver ? /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q4IQE4P7TRXw4Vsiu8J9tDGHJvQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createContext","useEffect","Board","Keyboard","GameOver","boardDefault","scoreBoardDefault","jsxDEV","_jsxDEV","AppContext","App","_s","board","setBoard","scoreBoard","setScoreBoard","currAttempt","setCurrAttempt","attempt","letter","gameOver","setGameOver","guessedWord","TalkToAPI","guess","response","fetch","method","headers","body","JSON","stringify","data","json","is_valid_word","error","console","onEnter","currWord","i","validWord","alert","totalScore","reduce","accumulator","currentValue","onDelete","newBoard","newScoreBoard","onSelectLetter","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/Users/bhargavparekh/Documents/wordle/src/App.js"],"sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport Board from \"./components/Board\";\nimport Keyboard from \"./components/Keyboard\";\nimport GameOver from \"./components/GameOver\";\nimport { boardDefault, scoreBoardDefault } from \"./Words\";\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [board, setBoard] = useState(boardDefault);\n  const [scoreBoard, setScoreBoard] = useState(scoreBoardDefault);\n  const [currAttempt, setCurrAttempt] = useState({ attempt: 0, letter: 0 });\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false,\n  });\n\n  const TalkToAPI = async (guess) => {\n    try {\n      const response = await fetch('https://wordle-apis.vercel.app/api/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ guess: guess })\n      });\n      const data = await response.json();\n      return data.is_valid_word;\n    } catch (error) {\n      console.error('Error:', error);\n      return false;\n    }\n  }\n\n  const onEnter = async () => {\n    if (currAttempt.letter !== 5) {\n      return;\n    }\n\n    let currWord = \"\";\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n\n    const validWord = await TalkToAPI(currWord);\n    if (validWord) {\n      setCurrAttempt({ attempt: currAttempt.attempt + 1, letter: 0 });\n    } else {\n      alert(\"Not a valid word\");\n    }\n  };\n\n  useEffect(() => {\n    const totalScore = scoreBoard.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n\n    if (totalScore === 10) {\n      setGameOver({ gameOver: true, guessedWord: true });\n    } else if (currAttempt.attempt === 5) {\n      setGameOver({ gameOver: true, guessedWord: false });\n    }\n  }, [scoreBoard, currAttempt]);\n\n  const onDelete = () => {\n    if (currAttempt.letter === 0) return;\n    const newBoard = [...board];\n    const newScoreBoard = [...scoreBoard];\n    newBoard[currAttempt.attempt][currAttempt.letter - 1] = \"\";\n    newScoreBoard[currAttempt.attempt][currAttempt.letter - 1] = 0;\n    setBoard(newBoard);\n    setScoreBoard(newScoreBoard);\n    setCurrAttempt({ ...currAttempt, letter: currAttempt.letter - 1 });\n  };\n\n  const onSelectLetter = (key) => {\n    if (currAttempt.letter > 4) return;\n    const newBoard = [...board];\n    const newScoreBoard = [...scoreBoard];\n    newBoard[currAttempt.attempt][currAttempt.letter] = key;\n    newScoreBoard[currAttempt.attempt][currAttempt.letter] = 0;\n    setBoard(newBoard);\n    setScoreBoard(newScoreBoard);\n    setCurrAttempt({\n      attempt: currAttempt.attempt,\n      letter: currAttempt.letter + 1,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Wordle</h1>\n      </nav>\n      <AppContext.Provider\n        value={{\n          board,\n          setBoard,\n          scoreBoard,\n          currAttempt,\n          setCurrAttempt,\n          onSelectLetter,\n          onDelete,\n          onEnter,\n          gameOver,\n        }}\n      >\n        <div className=\"game\">\n          <Board />\n          {gameOver.gameOver ? <GameOver /> : <Keyboard />}\n        </div>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}