{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavparekh/Documents/wordle/src/components/Letter.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Letter({\n  letterPos,\n  attemptVal\n}) {\n  _s();\n  const {\n    score,\n    board,\n    setDisabledLetters,\n    currAttempt,\n    correctWord\n  } = useContext(AppContext);\n  const letter = board[attemptVal][letterPos];\n  const correct = score[letterPos] === letter;\n  const almost = !correct && letter !== \"\" && correctWord.toUpperCase().includes(letter);\n  const letterState = currAttempt.attempt > attemptVal && (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) {\n      console.log(letter);\n      setDisabledLetters(prev => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter\",\n    id: letterState,\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Letter, \"lcYUEOk4o00Y2R7Qx9VTX5O00DU=\");\n_c = Letter;\nexport default Letter;\nvar _c;\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","useEffect","AppContext","jsxDEV","_jsxDEV","Letter","letterPos","attemptVal","_s","score","board","setDisabledLetters","currAttempt","correctWord","letter","correct","almost","toUpperCase","includes","letterState","attempt","console","log","prev","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhargavparekh/Documents/wordle/src/components/Letter.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../App\";\n\nfunction Letter({ letterPos, attemptVal }) {\n  const { score, board, setDisabledLetters, currAttempt, correctWord } = useContext(AppContext);\n  const letter = board[attemptVal][letterPos];\n  const correct = score[letterPos] === letter;\n  const almost = !correct && letter !== \"\" && correctWord.toUpperCase().includes(letter);\n  const letterState = currAttempt.attempt > attemptVal && (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) {\n      console.log(letter);\n      setDisabledLetters((prev) => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n  return (\n    <div className=\"letter\" id={letterState}>\n      {letter}\n    </div>\n  );\n}\n\nexport default Letter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,MAAMA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC,kBAAkB;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGb,UAAU,CAACE,UAAU,CAAC;EAC7F,MAAMY,MAAM,GAAGJ,KAAK,CAACH,UAAU,CAAC,CAACD,SAAS,CAAC;EAC3C,MAAMS,OAAO,GAAGN,KAAK,CAACH,SAAS,CAAC,KAAKQ,MAAM;EAC3C,MAAME,MAAM,GAAG,CAACD,OAAO,IAAID,MAAM,KAAK,EAAE,IAAID,WAAW,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACJ,MAAM,CAAC;EACtF,MAAMK,WAAW,GAAGP,WAAW,CAACQ,OAAO,GAAGb,UAAU,KAAKQ,OAAO,GAAG,SAAS,GAAGC,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;EAE3Gf,SAAS,CAAC,MAAM;IACd,IAAIa,MAAM,KAAK,EAAE,IAAI,CAACC,OAAO,IAAI,CAACC,MAAM,EAAE;MACxCK,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;MACnBH,kBAAkB,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAET,MAAM,CAAC,CAAC;IACjD;EACF,CAAC,EAAE,CAACF,WAAW,CAACQ,OAAO,CAAC,CAAC;EACzB,oBACEhB,OAAA;IAAKoB,SAAS,EAAC,QAAQ;IAACC,EAAE,EAAEN,WAAY;IAAAO,QAAA,EACrCZ;EAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACtB,EAAA,CAlBQH,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAoBf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}