{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavparekh/Desktop/WordleClone/src/components/Key.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Key = ({\n  keyVal,\n  bigKey,\n  disabled\n}) => {\n  _s();\n  const {\n    keyScore,\n    board,\n    gameOver,\n    Scoreboard,\n    currAttempt,\n    onSelectLetter,\n    onDelete,\n    onEnter,\n    disabledLetters\n  } = useContext(AppContext);\n  const uniqueArray = [...new Set(disabledLetters)];\n  // console.log(keyScore)\n  // console.log(disabledLetters)\n\n  const setKeyNum = () => {\n    keyScore.forEach((element, i) => {\n      console.log(element);\n    });\n  };\n  setKeyNum();\n  const selectLetter = () => {\n    if (gameOver.gameOver) return;\n    if (keyVal === \"ENTER\") {\n      onEnter();\n    } else if (keyVal === \"DELETE\") {\n      onDelete();\n    } else {\n      onSelectLetter(keyVal);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"key\",\n    id: bigKey ? \"big\" : disabled && `disabled${2}`,\n    onClick: selectLetter,\n    children: keyVal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Key, \"BhGrBz46DcAKBLp4/vl9hGwjtAU=\");\n_c = Key;\nexport default Key;\nvar _c;\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"names":["React","useContext","useState","AppContext","jsxDEV","_jsxDEV","Key","keyVal","bigKey","disabled","_s","keyScore","board","gameOver","Scoreboard","currAttempt","onSelectLetter","onDelete","onEnter","disabledLetters","uniqueArray","Set","setKeyNum","forEach","element","i","console","log","selectLetter","className","id","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhargavparekh/Desktop/WordleClone/src/components/Key.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../App\";\n\nconst Key = ({ keyVal, bigKey, disabled }) => {\n  const { keyScore,board,gameOver,Scoreboard, currAttempt, onSelectLetter, onDelete,onEnter,disabledLetters } = useContext(AppContext);\n    const uniqueArray = [...new Set(disabledLetters)];\n    // console.log(keyScore)\n    // console.log(disabledLetters)\n    \n    const setKeyNum = ()=>{\n      keyScore.forEach((element,i) => {\n        console.log(element)\n      });\n    }\n    setKeyNum()\n\n\n  const selectLetter = () => {\n    if (gameOver.gameOver) return;\n    if (keyVal === \"ENTER\") {\n      onEnter();\n    } else if (keyVal === \"DELETE\") {\n      onDelete();\n    } else {\n      onSelectLetter(keyVal);\n    }\n  };\n  return (\n    <div\n      className=\"key\"\n      id={bigKey ? \"big\" : disabled && `disabled${2}`}\n      onClick={selectLetter}\n    >\n      {keyVal}\n    </div>\n  );\n}\n\nexport default Key;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAC;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC,QAAQ;IAACC,KAAK;IAACC,QAAQ;IAACC,UAAU;IAAEC,WAAW;IAAEC,cAAc;IAAEC,QAAQ;IAACC,OAAO;IAACC;EAAgB,CAAC,GAAGlB,UAAU,CAACE,UAAU,CAAC;EAClI,MAAMiB,WAAW,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACF,eAAe,CAAC,CAAC;EACjD;EACA;;EAEA,MAAMG,SAAS,GAAGA,CAAA,KAAI;IACpBX,QAAQ,CAACY,OAAO,CAAC,CAACC,OAAO,EAACC,CAAC,KAAK;MAC9BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC;EACDF,SAAS,CAAC,CAAC;EAGb,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIf,QAAQ,CAACA,QAAQ,EAAE;IACvB,IAAIN,MAAM,KAAK,OAAO,EAAE;MACtBW,OAAO,CAAC,CAAC;IACX,CAAC,MAAM,IAAIX,MAAM,KAAK,QAAQ,EAAE;MAC9BU,QAAQ,CAAC,CAAC;IACZ,CAAC,MAAM;MACLD,cAAc,CAACT,MAAM,CAAC;IACxB;EACF,CAAC;EACD,oBACEF,OAAA;IACEwB,SAAS,EAAC,KAAK;IACfC,EAAE,EAAEtB,MAAM,GAAG,KAAK,GAAGC,QAAQ,IAAK,WAAU,CAAE,EAAE;IAChDsB,OAAO,EAAEH,YAAa;IAAAI,QAAA,EAErBzB;EAAM;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAA1B,EAAA,CAjCKJ,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}