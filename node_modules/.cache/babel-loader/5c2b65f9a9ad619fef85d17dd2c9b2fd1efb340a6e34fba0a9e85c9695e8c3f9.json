{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavparekh/Documents/wordle/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport Keyboard from \"./components/Keyboard\";\nimport { boardDefault, scoreBoardDefault } from \"./Words\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport GameOver from \"./components/GameOver\";\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(boardDefault);\n  const [Scoreboard, setScoreBoard] = useState(scoreBoardDefault);\n  const [confetti, SetConfetti] = useState(false);\n  const [score, setScore] = useState([]);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letter: 0\n  });\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false\n  });\n\n  // you can also use promise to achieve a function execution after API call\n\n  const onEnter = () => {\n    if (currAttempt.letter !== 5) {\n      return;\n    }\n    let currWord = \"\";\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n\n    // Call the API using a promise\n    fetch('https://wordle-apis.vercel.app/api/validate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        guess: currWord\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Process the API response\n      console.log(data.score);\n      const totalScore = data.score.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n      setScore(data.score);\n      if (data.is_valid_word) {\n        setCurrAttempt({\n          attempt: currAttempt.attempt + 1,\n          letter: 0\n        });\n        const newScorebord = [...Scoreboard];\n        newScorebord[currAttempt.attempt] = data.score;\n        setScoreBoard(newScorebord);\n        console.log(currAttempt);\n      } else {\n        alert(\"Not a valid word\");\n      }\n      if (totalScore === 10) {\n        if (currAttempt.attempt === 5) {\n          setGameOver({\n            gameOver: true,\n            guessedWord: true\n          });\n        }\n        setGameOver({\n          gameOver: true,\n          guessedWord: true\n        });\n        SetConfetti(true);\n      }\n      if (totalScore !== 10) {\n        if (currAttempt.attempt === 5) {\n          setGameOver({\n            gameOver: true,\n            guessedWord: false\n          });\n        }\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const onDelete = () => {\n    if (currAttempt.letter === 0) return;\n    const newBoard = [...board];\n    const newScorebord = [...Scoreboard];\n    newBoard[currAttempt.attempt][currAttempt.letter - 1] = \"\";\n    newScorebord[currAttempt.attempt][currAttempt.letter - 1] = 0;\n    setBoard(newBoard);\n    setScoreBoard(newScorebord);\n    setCurrAttempt({\n      ...currAttempt,\n      letter: currAttempt.letter - 1\n    });\n  };\n  const onSelectLetter = key => {\n    if (currAttempt.letter > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letter] = key;\n    setBoard(newBoard);\n    setCurrAttempt({\n      attempt: currAttempt.attempt,\n      letter: currAttempt.letter + 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        score,\n        Scoreboard,\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        setDisabledLetters,\n        disabledLetters,\n        gameOver\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Confetti, {\n          run: confetti,\n          numberOfPieces: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          score: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kS7bFYhxhjIspRZATC4yXzdUXds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","Keyboard","boardDefault","scoreBoardDefault","React","useState","createContext","useEffect","GameOver","Confetti","jsxDEV","_jsxDEV","AppContext","App","_s","board","setBoard","Scoreboard","setScoreBoard","confetti","SetConfetti","score","setScore","currAttempt","setCurrAttempt","attempt","letter","disabledLetters","setDisabledLetters","gameOver","setGameOver","guessedWord","onEnter","currWord","i","fetch","method","headers","body","JSON","stringify","guess","then","response","ok","Error","json","data","console","log","totalScore","reduce","accumulator","currentValue","is_valid_word","newScorebord","alert","catch","error","onDelete","newBoard","onSelectLetter","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","run","numberOfPieces","_c","$RefreshReg$"],"sources":["/Users/bhargavparekh/Documents/wordle/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Board from \"./components/Board\";\nimport Keyboard from \"./components/Keyboard\";\nimport { boardDefault, scoreBoardDefault } from \"./Words\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport GameOver from \"./components/GameOver\";\nimport Confetti from 'react-confetti';\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [board, setBoard] = useState(boardDefault);\n  const [Scoreboard, setScoreBoard] = useState(scoreBoardDefault);\n  const [confetti, SetConfetti] = useState(false);\n  const [score, setScore] = useState([]);\n  const [currAttempt, setCurrAttempt] = useState({ attempt: 0, letter: 0 });\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false,\n  });\n\n\n  // you can also use promise to achieve a function execution after API call\n\n  const onEnter = () => {\n    if (currAttempt.letter !== 5) {\n      return;\n    }\n  \n    let currWord = \"\";\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n    \n    // Call the API using a promise\n    fetch('https://wordle-apis.vercel.app/api/validate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ guess: currWord })\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      // Process the API response\n      console.log(data.score);\n      const totalScore = data.score.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n      setScore(data.score);\n  \n      if (data.is_valid_word) {\n        setCurrAttempt({ attempt: currAttempt.attempt + 1, letter: 0 });\n        const newScorebord = [...Scoreboard]\n        newScorebord[currAttempt.attempt] = data.score;\n        setScoreBoard(newScorebord)\n        console.log(currAttempt)\n      } else {\n        alert(\"Not a valid word\");\n      }\n  \n      if (totalScore === 10) {\n        if (currAttempt.attempt === 5) {\n          setGameOver({ gameOver: true, guessedWord: true });\n        }\n        setGameOver({ gameOver: true, guessedWord: true });\n        SetConfetti(true)\n      }\n      if (totalScore !== 10) {\n        if (currAttempt.attempt === 5) {\n          setGameOver({ gameOver: true, guessedWord: false });\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n\n  const onDelete = () => {\n    if (currAttempt.letter === 0) return;\n    const newBoard = [...board];\n    const newScorebord = [...Scoreboard]\n    newBoard[currAttempt.attempt][currAttempt.letter - 1] = \"\";\n    newScorebord[currAttempt.attempt][currAttempt.letter - 1] = 0;\n    setBoard(newBoard);\n    setScoreBoard(newScorebord)\n    setCurrAttempt({ ...currAttempt, letter: currAttempt.letter - 1 });\n  };\n\n  const onSelectLetter = (key) => {\n    if (currAttempt.letter > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letter] = key;\n\n    setBoard(newBoard);\n    setCurrAttempt({\n      attempt: currAttempt.attempt,\n      letter: currAttempt.letter + 1,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Wordle</h1>\n      </nav>\n      <AppContext.Provider\n        value={{\n          score,\n          Scoreboard,\n          board,\n          setBoard,\n          currAttempt,\n          setCurrAttempt,\n          onSelectLetter,\n          onDelete,\n          onEnter,\n          setDisabledLetters,\n          disabledLetters,\n          gameOver,\n        }}\n      >\n        <div className=\"game\">\n          <Confetti run= {confetti} numberOfPieces = \"100\" />\n          <Board score={score}/>\n          {/* {gameOver.gameOver ? <GameOver /> : <Keyboard />} */}\n        </div>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,YAAY,EAAEC,iBAAiB,QAAQ,SAAS;AACzD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAEzC,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACH,YAAY,CAAC;EAChD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACF,iBAAiB,CAAC;EAC/D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,OAAO,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EACzE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC;IACvCwB,QAAQ,EAAE,KAAK;IACfE,WAAW,EAAE;EACf,CAAC,CAAC;;EAGF;;EAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIT,WAAW,CAACG,MAAM,KAAK,CAAC,EAAE;MAC5B;IACF;IAEA,IAAIO,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BD,QAAQ,IAAIlB,KAAK,CAACQ,WAAW,CAACE,OAAO,CAAC,CAACS,CAAC,CAAC;IAC3C;;IAEA;IACAC,KAAK,CAAC,6CAA6C,EAAE;MACnDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAER;MAAS,CAAC;IAC1C,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZ;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC1B,KAAK,CAAC;MACvB,MAAM6B,UAAU,GAAGH,IAAI,CAAC1B,KAAK,CAAC8B,MAAM,CAAC,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAW,GAAGC,YAAY,EAAE,CAAC,CAAC;MAClG/B,QAAQ,CAACyB,IAAI,CAAC1B,KAAK,CAAC;MAEpB,IAAI0B,IAAI,CAACO,aAAa,EAAE;QACtB9B,cAAc,CAAC;UAAEC,OAAO,EAAEF,WAAW,CAACE,OAAO,GAAG,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC,CAAC;QAC/D,MAAM6B,YAAY,GAAG,CAAC,GAAGtC,UAAU,CAAC;QACpCsC,YAAY,CAAChC,WAAW,CAACE,OAAO,CAAC,GAAGsB,IAAI,CAAC1B,KAAK;QAC9CH,aAAa,CAACqC,YAAY,CAAC;QAC3BP,OAAO,CAACC,GAAG,CAAC1B,WAAW,CAAC;MAC1B,CAAC,MAAM;QACLiC,KAAK,CAAC,kBAAkB,CAAC;MAC3B;MAEA,IAAIN,UAAU,KAAK,EAAE,EAAE;QACrB,IAAI3B,WAAW,CAACE,OAAO,KAAK,CAAC,EAAE;UAC7BK,WAAW,CAAC;YAAED,QAAQ,EAAE,IAAI;YAAEE,WAAW,EAAE;UAAK,CAAC,CAAC;QACpD;QACAD,WAAW,CAAC;UAAED,QAAQ,EAAE,IAAI;UAAEE,WAAW,EAAE;QAAK,CAAC,CAAC;QAClDX,WAAW,CAAC,IAAI,CAAC;MACnB;MACA,IAAI8B,UAAU,KAAK,EAAE,EAAE;QACrB,IAAI3B,WAAW,CAACE,OAAO,KAAK,CAAC,EAAE;UAC7BK,WAAW,CAAC;YAAED,QAAQ,EAAE,IAAI;YAAEE,WAAW,EAAE;UAAM,CAAC,CAAC;QACrD;MACF;IACF,CAAC,CAAC,CACD0B,KAAK,CAACC,KAAK,IAAI;MACdV,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIpC,WAAW,CAACG,MAAM,KAAK,CAAC,EAAE;IAC9B,MAAMkC,QAAQ,GAAG,CAAC,GAAG7C,KAAK,CAAC;IAC3B,MAAMwC,YAAY,GAAG,CAAC,GAAGtC,UAAU,CAAC;IACpC2C,QAAQ,CAACrC,WAAW,CAACE,OAAO,CAAC,CAACF,WAAW,CAACG,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE;IAC1D6B,YAAY,CAAChC,WAAW,CAACE,OAAO,CAAC,CAACF,WAAW,CAACG,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;IAC7DV,QAAQ,CAAC4C,QAAQ,CAAC;IAClB1C,aAAa,CAACqC,YAAY,CAAC;IAC3B/B,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAEG,MAAM,EAAEH,WAAW,CAACG,MAAM,GAAG;IAAE,CAAC,CAAC;EACpE,CAAC;EAED,MAAMmC,cAAc,GAAIC,GAAG,IAAK;IAC9B,IAAIvC,WAAW,CAACG,MAAM,GAAG,CAAC,EAAE;IAC5B,MAAMkC,QAAQ,GAAG,CAAC,GAAG7C,KAAK,CAAC;IAC3B6C,QAAQ,CAACrC,WAAW,CAACE,OAAO,CAAC,CAACF,WAAW,CAACG,MAAM,CAAC,GAAGoC,GAAG;IAEvD9C,QAAQ,CAAC4C,QAAQ,CAAC;IAClBpC,cAAc,CAAC;MACbC,OAAO,EAAEF,WAAW,CAACE,OAAO;MAC5BC,MAAM,EAAEH,WAAW,CAACG,MAAM,GAAG;IAC/B,CAAC,CAAC;EACJ,CAAC;EAED,oBACEf,OAAA;IAAKoD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrD,OAAA;MAAAqD,QAAA,eACErD,OAAA;QAAAqD,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACNzD,OAAA,CAACC,UAAU,CAACyD,QAAQ;MAClBC,KAAK,EAAE;QACLjD,KAAK;QACLJ,UAAU;QACVF,KAAK;QACLC,QAAQ;QACRO,WAAW;QACXC,cAAc;QACdqC,cAAc;QACdF,QAAQ;QACR3B,OAAO;QACPJ,kBAAkB;QAClBD,eAAe;QACfE;MACF,CAAE;MAAAmC,QAAA,eAEFrD,OAAA;QAAKoD,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBrD,OAAA,CAACF,QAAQ;UAAC8D,GAAG,EAAGpD,QAAS;UAACqD,cAAc,EAAG;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnDzD,OAAA,CAACX,KAAK;UAACqB,KAAK,EAAEA;QAAM;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACtD,EAAA,CA9HQD,GAAG;AAAA4D,EAAA,GAAH5D,GAAG;AAgIZ,eAAeA,GAAG;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}