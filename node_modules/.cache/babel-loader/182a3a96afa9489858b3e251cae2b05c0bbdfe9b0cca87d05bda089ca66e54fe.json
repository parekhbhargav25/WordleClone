{"ast":null,"code":"var _jsxFileName = \"/Users/bhargavparekh/Documents/wordle/src/components/Input.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar globalWordState = false;\nfunction OTP({\n  separator,\n  length,\n  value,\n  onChange,\n  onSubmit\n}) {\n  _s();\n  const inputRefs = React.useRef(new Array(length).fill(null));\n  const handleKeyDown = (event, currentIndex) => {\n    switch (event.key) {\n      case ' ':\n        event.preventDefault();\n        break;\n      case 'Enter':\n        onSubmit(); // Call the onSubmit function passed from the parent\n        console.log(globalWordState);\n        break;\n      case 'Delete':\n        event.preventDefault();\n        onChange(prevOtp => {\n          const otp = prevOtp.slice(0, currentIndex) + prevOtp.slice(currentIndex + 1);\n          return otp;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      gap: 1,\n      alignItems: 'center'\n    },\n    children: new Array(length).fill(null).map((_, index) => {\n      var _value$index;\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n          ref: ele => {\n            inputRefs.current[index] = ele;\n          },\n          onKeyDown: event => handleKeyDown(event, index),\n          onChange: event => onChange(event.target.value),\n          value: (_value$index = value[index]) !== null && _value$index !== void 0 ? _value$index : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), index === length - 1 ? null : separator]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(OTP, \"tWpMuGxnGLebQJHOOQnv6KtvNn4=\");\n_c = OTP;\nOTP.propTypes = {\n  length: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  // Add onSubmit prop type\n  separator: PropTypes.node,\n  value: PropTypes.string.isRequired\n};\nexport default function OTPInput() {\n  _s2();\n  const [otp, setOtp] = React.useState('');\n  const [validWord, setValidWord] = React.useState(false);\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('https://wordle-apis.vercel.app/api/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          guess: otp\n        })\n      });\n      const data = await response.json();\n      setValidWord(data.is_valid_word);\n      globalWordState = validWord;\n      console.log(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(OTP, {\n      separator: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }, this),\n      value: otp,\n      onSubmit: handleSubmit,\n      onChange: setOtp,\n      length: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s2(OTPInput, \"3zsug0/F6nQVeIH1RjkbWdy3JYI=\");\n_c2 = OTPInput;\nconst StyledInput = styled('input')(({\n  theme\n}) => `\n  width: 40px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 1.2rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 0px;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0px 2px 4px ${theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'};\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`);\n_c3 = StyledInput;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"OTP\");\n$RefreshReg$(_c2, \"OTPInput\");\n$RefreshReg$(_c3, \"StyledInput\");","map":{"version":3,"names":["React","PropTypes","Box","styled","jsxDEV","_jsxDEV","globalWordState","OTP","separator","length","value","onChange","onSubmit","_s","inputRefs","useRef","Array","fill","handleKeyDown","event","currentIndex","key","preventDefault","console","log","prevOtp","otp","slice","sx","display","gap","alignItems","children","map","_","index","_value$index","Fragment","StyledInput","ref","ele","current","onKeyDown","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","isRequired","func","node","string","OTPInput","_s2","setOtp","useState","validWord","setValidWord","handleSubmit","response","fetch","method","headers","body","JSON","stringify","guess","data","json","is_valid_word","error","flexDirection","_c2","theme","palette","mode","_c3","$RefreshReg$"],"sources":["/Users/bhargavparekh/Documents/wordle/src/components/Input.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, styled } from '@mui/system';\n\nvar globalWordState = false;\n\nfunction OTP({ separator, length, value, onChange, onSubmit }) {\n  const inputRefs = React.useRef(new Array(length).fill(null));\n\n  const handleKeyDown = (event, currentIndex) => {\n    switch (event.key) {\n      case ' ':\n        event.preventDefault();\n        break;\n      case 'Enter':\n        onSubmit(); // Call the onSubmit function passed from the parent\n        console.log(globalWordState);\n        break;\n      case 'Delete':\n        event.preventDefault();\n        onChange((prevOtp) => {\n          const otp =\n            prevOtp.slice(0, currentIndex) + prevOtp.slice(currentIndex + 1);\n          return otp;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n      {new Array(length).fill(null).map((_, index) => (\n        <React.Fragment key={index}>\n          <StyledInput\n            ref={(ele) => {\n              inputRefs.current[index] = ele;\n            }}\n            onKeyDown={(event) => handleKeyDown(event, index)}\n            onChange={(event) => onChange(event.target.value)}\n            value={value[index] ?? ''}\n          />\n          {index === length - 1 ? null : separator}\n        </React.Fragment>\n      ))}\n    </Box>\n  );\n}\n\nOTP.propTypes = {\n  length: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired, // Add onSubmit prop type\n  separator: PropTypes.node,\n  value: PropTypes.string.isRequired,\n};\n\nexport default function OTPInput() {\n  const [otp, setOtp] = React.useState('');\n  const [validWord, setValidWord] = React.useState(false);\n\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('https://wordle-apis.vercel.app/api/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ guess: otp })\n      });\n      const data = await response.json();\n      setValidWord(data.is_valid_word);\n      globalWordState = validWord;\n      console.log(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n      }}\n    >\n      <OTP separator={<span> </span>} value={otp} onSubmit={handleSubmit} onChange={setOtp} length={5} />\n      {/* <span>{otp}</span> */}\n      <span> </span>\n    </Box>\n  );\n}\n\nconst StyledInput = styled('input')(\n  ({ theme }) => `\n  width: 40px;\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 1.2rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 8px 0px;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0px 2px 4px ${\n    theme.palette.mode === 'dark' ? 'rgba(0,0,0, 0.5)' : 'rgba(0,0,0, 0.05)'\n  };\n\n  // firefox\n  &:focus-visible {\n    outline: 0;\n  }\n`,\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}